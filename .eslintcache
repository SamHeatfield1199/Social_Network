[{"C:\\Users\\asmir\\Desktop\\soc\\src\\index.js":"1","C:\\Users\\asmir\\Desktop\\soc\\src\\reportWebVitals.js":"2","C:\\Users\\asmir\\Desktop\\soc\\src\\App.js":"3","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\redux_store.js":"4","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Navbar\\Navbar.jsx":"5","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\Header.jsx":"6","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\Profile.jsx":"7","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPosts.jsx":"8","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"9","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\Post\\Post.jsx":"10","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPostsContainer.jsx":"11","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersReducer.js":"12","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\dialogsReducer.js":"13","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\profileReducer.js":"14","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileContainer.jsx":"15","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\authReducer.js":"16","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\HeaderContainer.jsx":"17","C:\\Users\\asmir\\Desktop\\soc\\src\\api\\api.js":"18","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Login\\Login.jsx":"19","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\AuthRedirect.js":"20","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"21","C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\validators\\validator.js":"22","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\formsControls\\FormsControls.js":"23","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\appReducer.js":"24","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersSelectors.js":"25","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"26","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogsContainer.jsx":"27","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Dialogs.jsx":"28","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\UsersContainer.jsx":"29","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\Users.jsx":"30","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Message\\Message.jsx":"31","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"32","C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\objectelpers.js":"33","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\Paginator\\Paginator.jsx":"34","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\User.jsx":"35"},{"size":702,"mtime":1612014382036,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":4908,"mtime":1616500301977,"results":"39","hashOfConfig":"37"},{"size":1235,"mtime":1616485519670,"results":"40","hashOfConfig":"37"},{"size":1009,"mtime":1615283811973,"results":"41","hashOfConfig":"37"},{"size":674,"mtime":1615526578873,"results":"42","hashOfConfig":"37"},{"size":403,"mtime":1615447351673,"results":"43","hashOfConfig":"37"},{"size":1494,"mtime":1616293637771,"results":"44","hashOfConfig":"37"},{"size":805,"mtime":1616068938041,"results":"45","hashOfConfig":"37"},{"size":342,"mtime":1615283811973,"results":"46","hashOfConfig":"37"},{"size":569,"mtime":1615467346904,"results":"47","hashOfConfig":"37"},{"size":4221,"mtime":1616399111579,"results":"48","hashOfConfig":"37"},{"size":961,"mtime":1615461990428,"results":"49","hashOfConfig":"37"},{"size":1910,"mtime":1616395803880,"results":"50","hashOfConfig":"37"},{"size":1663,"mtime":1615548668355,"results":"51","hashOfConfig":"37"},{"size":1846,"mtime":1616301232646,"results":"52","hashOfConfig":"37"},{"size":455,"mtime":1615543516747,"results":"53","hashOfConfig":"37"},{"size":1310,"mtime":1615543875994,"results":"54","hashOfConfig":"37"},{"size":1756,"mtime":1616474500881,"results":"55","hashOfConfig":"37"},{"size":1358,"mtime":1615527549137,"results":"56","hashOfConfig":"37"},{"size":2096,"mtime":1615457072435,"results":"57","hashOfConfig":"37"},{"size":524,"mtime":1615508945387,"results":"58","hashOfConfig":"37"},{"size":1224,"mtime":1616474775046,"results":"59","hashOfConfig":"37"},{"size":892,"mtime":1615548380503,"results":"60","hashOfConfig":"37"},{"size":1336,"mtime":1616482813139,"results":"61","hashOfConfig":"37"},{"size":3224,"mtime":1616122817553,"results":"62","hashOfConfig":"37"},{"size":1083,"mtime":1616293629734,"results":"63","hashOfConfig":"37"},{"size":2073,"mtime":1616293627387,"results":"64","hashOfConfig":"37"},{"size":2229,"mtime":1616482787270,"results":"65","hashOfConfig":"37"},{"size":726,"mtime":1616480693459,"results":"66","hashOfConfig":"37"},{"size":218,"mtime":1616293640767,"results":"67","hashOfConfig":"37"},{"size":385,"mtime":1616293635299,"results":"68","hashOfConfig":"37"},{"size":231,"mtime":1616396866636,"results":"69","hashOfConfig":"37"},{"size":1681,"mtime":1616500299213,"results":"70","hashOfConfig":"37"},{"size":1351,"mtime":1616480896126,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"dnrmck",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},"C:\\Users\\asmir\\Desktop\\soc\\src\\index.js",[],["155","156"],"C:\\Users\\asmir\\Desktop\\soc\\src\\reportWebVitals.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\App.js",["157"],"import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport preloader from './images/2.gif';\nimport { initializeAppTC } from \"./redux/appReducer\";\n\n/*\nКакие момент ынужно помнить и понимать на мой скромный взгляд, когда вас спросят про фистую функцию?\n1. immutability (имьютабельность, неизменяемость) - входные данные, пришедшие в функцию, эта функция не должна менять (речь про объекты и массивы, так как по ссылке они передаются, поэтому делаем копию)\n2. отсутствие side-effects (пункт 1 связан с этим, а так же использование глобальных переменных, их модификация, асинхронные операции и что-то может быть ещё)\n3. детерменированность\\идемпотентность  -  сколько бы раз на вход чистой функции не подавали одно и тоже, на выходе чистой функции должен быть один и тот же результат\n4. чистая функция должна вернуть (return) что-либо)))\n*/\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\n\n/*\nСамураи, привет. Зачем нужен React.lazy??? \nОтвет: чтобы в основной bundle (собранный для браузера большой общий js-файл) не попадали некоторые компоненты, которые с большой вероятностью не будут посещены большинством пользователей. А значит можно уменьшить размер итоговой сборки, чтобы ускорить стартовую загрузку всего приложения.\n\nА тем компоненты, которые мы import-ируем лениво (React.lazy), они будут собраны в другие сборки-файлики и подгружены будут по сети по мере надобности. А может и вовсе не будут, если этой надобности не будет. Факт: мы загружаем только то, что нужно. А то что не загрузили, но оно понадобилось - подгрузим лениво в момент необходимости.\n\nДа, пользователь из-за ленивой подгрузки контента (React.lazy) в момент обращения будет видеть ПУСТОТУ... Потому что React-у нечего отобразить... \n\nЧтобы не было этой пустоты и пользователь понимал, что данные (а именно компоненты) грузятся - мы должны показать какую-то заглушку (fallback)... Для этого и нужен нам компонент React.Suspense\n*/\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if(!this.props.initialized){return <div><img src={preloader} /></div>}\n    \n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" \n          render={() =>{\n            return <Suspense fallback = {<div>Loading...</div>}>\n            <DialogsContainer />\n            </Suspense>\n            }} />\n\n          <Route path=\"/profile/:userid?\" render={() => {\n            <Suspense fallback = {<div>Loading...</div>}>\n               <ProfileContainer />\n            </Suspense>\n          }} />\n         \n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n//когда мы коннектим компоненту у нас сбивается роут\n//Поэтому оберенм его еще withRouter\n\nconst mapStateToProps = (state) => ({\n initialized: state.app.initialized\n})\n\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp: initializeAppTC}))\n  (App)\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\redux_store.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Navbar\\Navbar.jsx",["158","159","160"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}> Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}> Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> News</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> Music</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\Header.jsx",["161"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://turbologo.ru/blog/wp-content/uploads/2020/02/clan-logo-cover-958x575.png' />\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} -\r\n                <button onClick = {props.logout}>Log out</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPosts.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["162","163","164"],"import React from 'react';\r\nimport preloader from '../../../images/2.gif';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (!props.profile) {\r\n    return (\r\n      <div><img src={preloader} /></div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      {/*<div><img src=\"https://pix10.agoda.net/hotelImages/3375/-1/f73547b49eadee36c6346f52a5b4f4fe.jpg?s=1024x768\" />\r\n      </div> */}\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatusWithHooks status ={props.status}\r\n        updateUserStatus = {props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\Post\\Post.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPostsContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersReducer.js",["165","166","167"],"import { act } from \"react-dom/test-utils\";\r\nimport { followUser, getUsers, userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objectelpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SETUSERS = \"SET_USERS\";\r\nconst SETCURRENTPAGE = \"SET_CURRENT_PAGE\";\r\nconst SETTOTALUSERSCOUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n\r\n    case SETUSERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n\r\n    case SETCURRENTPAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n\r\n    case SETTOTALUSERSCOUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followActionCreator = (userId) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId,\r\n  };\r\n};\r\nexport const unfollowActionCreator = (userId) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const setUsersActionCreator = (users) => {\r\n  return {\r\n    type: SETUSERS,\r\n    users,\r\n  };\r\n};\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) => {\r\n  return {\r\n    type: SETCURRENTPAGE,\r\n    currentPage,\r\n  };\r\n};\r\nexport const setTotalUsersCountActionCreator = (totalUsersCount) => {\r\n  return {\r\n    type: SETTOTALUSERSCOUNT,\r\n    count: totalUsersCount,\r\n  };\r\n};\r\nexport const toggleIsfetchingActionCreator = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const followingInProgressActionCreator = (isFetching, userId) => {\r\n  return {\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n  };\r\n};\r\n\r\n//thunk - функция, которая выполняет асинхронную работу и диспатчит экшены, чтобы ui не создаввал запросы к dal\r\n//и все происходило в бизнес логике\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsfetchingActionCreator(true));\r\n    dispatch(setCurrentPageActionCreator(currentPage));\r\n    let data = await userAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsfetchingActionCreator(false));\r\n    dispatch(setUsersActionCreator(data.items));\r\n    dispatch(setTotalUsersCountActionCreator(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n  dispatch(followingInProgressActionCreator(true, id));\r\n  let data = await apiMethod(id);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(id));\r\n  }\r\n  dispatch(followingInProgressActionCreator(false, id));\r\n};\r\n\r\nexport const followThunkCreator = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      userAPI.followUser.bind(userAPI),\r\n      followActionCreator\r\n    );\r\n  };\r\n};\r\n\r\nexport const unfollowThunkCreator = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      userAPI.unfollowUser.bind(userAPI),\r\n      unfollowActionCreator\r\n    );\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\dialogsReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\profileReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileContainer.jsx",["168"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getUserProfileTC, setUserProfileAC, setUserStatusAC, setUserStatusTC, updateUserStatusTC } from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\n\r\n//делаем классовым, чтобы можно было сделать запрос\r\n//делаем компоненту вручную\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userid = this.props.match.params.userid\r\n    if (!userid) {\r\n      userid = this.props.authedUserid\r\n    }\r\n    this.props.getUserProfile(userid)\r\n    this.props.getUserStatus(userid)\r\n   \r\n  }\r\n\r\n  render() {\r\n    //редирект на страницу логина. если не хотим показывать контент незарегестрированным пользователям, хорошее решение\r\n    return (\r\n        <Profile {...this.props}\r\n         profile={this.props.profile} \r\n         status ={this.props.status}\r\n         updateUserStatus = {this.props.updateUserStatus}/>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authedUserid : state.auth.userid,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile: setUserProfileAC,\r\n    getUserProfile: getUserProfileTC,\r\n    getUserStatus: setUserStatusTC,\r\n    updateUserStatus: updateUserStatusTC,\r\n  }),\r\n  withRouter,\r\n  \r\n)(ProfileContainer)","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\authReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\api\\api.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Login\\Login.jsx",["169","170"],"import classes from \"./../common/formsControls/FormsController.module.css\";\r\nimport { React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { login, logout } from \"../../redux/authReducer\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validator\";\r\nimport { CreateField, Input } from \"../common/formsControls/FormsControls\";\r\n//деструктуризировали парметры(достали только то, что нужно из пропсов)\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {CreateField(\"Email\", \"email\", [requiredField], Input)}\r\n        {CreateField('Password', 'password', [requiredField], Input, { type: \"password\" })}\r\n        {CreateField(\"\", 'rememberMe', [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n        {error && <div className={classes.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return (\r\n            <Redirect to={\"/profile\"} />\r\n        )\r\n    }\r\n\r\n    return <div>\r\n        <h1>\r\n            Login\r\n        </h1>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}\r\n)\r\n\r\nexport default connect(mapStateToProps, {\r\n    login: login,\r\n    logout: logout\r\n})(Login)","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\AuthRedirect.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\validators\\validator.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\formsControls\\FormsControls.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\appReducer.js",["171","172"],"import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserDataTC } from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccesActionCreator = () => {\r\n  return {\r\n    type: SET_INITIALIZED,\r\n  };\r\n};\r\n\r\nexport const initializeAppTC = () => (dispatch) => {\r\n  //когда получим данные из auth проинициализируемся\r\n  let promise = dispatch(getAuthUserDataTC())\r\n  Promise.all([promise])\r\n  .then(() =>{\r\n    dispatch(initializedSuccesActionCreator())\r\n  })\r\n  \r\n};\r\nexport default appReducer;\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersSelectors.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",["173"],"import React, { useEffect, useState } from 'react';\r\n\r\n//хуки - некоторая функция, которые нельзя использовать в условиях,\r\n//в циклах и тд\r\n\r\n\r\n/*\r\nVirtualDOM - то, благодаря чему ReactJS так взлетел.\r\n Он говорит: настоящий DOM - это дорого, это перерисовки, \r\n это ресурсы, дёрганья, и так далее... Давайте Я (REACT) брать брать\r\n  JSX из компонент и на основе его формировать Virtual DOM - набор\r\n   оъектов, из который потом буду превращать в настоящий DOM. \r\n   Зачем этот промежуточный слой нужен?\r\nДля того, чтобы прежде чем идти на основе Virtual DOM строить \r\nнастоящий DOM... Я смогу сравнить тот VirtualDOM, который у меня \r\nуже был, с тем, который я получил в текущей отрисовке из компонент,\r\n и... Сравнить их. И если изменения есть, я пойду и точечно эти\r\n  изменения перерисую в настоящем DOM.\r\n\r\nКак результат - коллосальный прирост производительности по сравнению с тем, как с DOM работали раньше (шаблонизаторы, innerHTML и так далее)...\r\n*/\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    //локальный стейт. возвращает массив и в нем сидит два элемента\r\n    //первый - название массива, второй - функция, которая будет изменять одиночное значение\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    //закидываем функцию, которая будет выполняться после отрисовки страницы\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"-----\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n\r\n            {editMode &&\r\n                <div>\r\n                    {/*blur срабатывает если элемент в фокусе*/}\r\n\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Dialogs.jsx",["174"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator';\r\nimport { Textarea } from '../common/formsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\n//презентационные компоненты получают только данные и коллбеки(вызовы функций)\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage\r\n\r\n    //Получаем JSX компоненты\r\n    let dialogsElements = state.dialogs.map(d =>\r\n        <DialogItem id={d.id} name={d.name} />)\r\n    let messagesElements = state.messages.map(m =>\r\n        <Message message={m.message} />)\r\n    let newMessageText = state.newMessageBody\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    //Отрисовываем компоненты\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                    validate ={[requiredField, maxLength ]} />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\UsersContainer.jsx",["175"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport preloader from '../../images/2.gif';\r\nimport {\r\n  followingInProgressActionCreator,\r\n  followThunkCreator,\r\n  getUsersThunkCreator,\r\n  setCurrentPageActionCreator,\r\n  unfollowThunkCreator\r\n} from '../../redux/usersReducer';\r\nimport {getUser, \r\n  getPageSize, \r\n  getTotalUsersCount, \r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress,} from '../../redux/usersSelectors'\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport Users from './Users';\r\n\r\n//контейерная компонета занимается побочными эффектами функции\r\nclass UsersContainer extends React.Component {\r\n  //ajax является побочым эффектом, что не подходит чистой функции\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize)\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <img src={preloader} /> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followInProgress={this.props.followInProgress}\r\n        followingInProgress={this.props.followingInProgress} />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUser(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow: followThunkCreator,\r\n    setCurrentPage: setCurrentPageActionCreator,\r\n    followInProgress: followingInProgressActionCreator,\r\n    getUsers: getUsersThunkCreator,\r\n    unfollow: unfollowThunkCreator,\r\n\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n\r\n\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\Users.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\objectelpers.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\Paginator\\Paginator.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\User.jsx",["176"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './Users.module.css'\r\n//просто отрисовка\r\nlet User = (\r\n    { user, followingInProgress, unfollow, follow }\r\n    ) => {\r\n        return <div>\r\n        <span>\r\n            <div className={classes.image}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    < img src={user.photos.small != null ? user.photos.small :\r\n                        \"https://www.pngfind.com/pngs/m/292-2924858_user-icon-business-man-flat-png-transparent-png.png\"}\r\n                    />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }\r\n                    }>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)} onClick={\r\n                        () => {\r\n                            follow(user.id)\r\n                        }\r\n                    }>Follow</button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n        </span>\r\n    </div>\r\n    }\r\n    export default User",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":42,"column":45,"nodeType":"183","endLine":42,"endColumn":68},{"ruleId":"184","severity":1,"message":"185","line":18,"column":17,"nodeType":"183","endLine":18,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":21,"column":17,"nodeType":"183","endLine":21,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":24,"column":17,"nodeType":"183","endLine":24,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":8,"column":13,"nodeType":"183","endLine":8,"endColumn":107},{"ruleId":"186","severity":1,"message":"187","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":12,"column":12,"nodeType":"183","endLine":12,"endColumn":35},{"ruleId":"181","severity":1,"message":"182","line":20,"column":9,"nodeType":"183","endLine":20,"endColumn":49},{"ruleId":"186","severity":1,"message":"190","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":13},{"ruleId":"186","severity":1,"message":"191","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":20},{"ruleId":"186","severity":1,"message":"192","line":2,"column":22,"nodeType":"188","messageId":"189","endLine":2,"endColumn":30},{"ruleId":"186","severity":1,"message":"193","line":5,"column":46,"nodeType":"188","messageId":"189","endLine":5,"endColumn":61},{"ruleId":"186","severity":1,"message":"194","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":15},{"ruleId":"186","severity":1,"message":"195","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":26},{"ruleId":"186","severity":1,"message":"196","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":20},{"ruleId":"186","severity":1,"message":"197","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":33,"column":8,"nodeType":"200","endLine":33,"endColumn":10,"suggestions":"201"},{"ruleId":"186","severity":1,"message":"202","line":19,"column":9,"nodeType":"188","messageId":"189","endLine":19,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":34,"column":32,"nodeType":"183","endLine":34,"endColumn":55},{"ruleId":"181","severity":1,"message":"182","line":12,"column":21,"nodeType":"183","endLine":14,"endColumn":23},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'ProfileStatus' is defined but never used.","Identifier","unusedVar","'act' is defined but never used.","'followUser' is defined but never used.","'getUsers' is defined but never used.","'setUserStatusAC' is defined but never used.","'Field' is defined but never used.","'maxLengthCreator' is defined but never used.","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.status'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'props.status', you can also switch to useReducer instead of useState and read 'props.status' in the reducer.","ArrayExpression",["205"],"'newMessageText' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},"Update the dependencies array to be: [props.status]",{"range":"208","text":"209"},[1422,1424],"[props.status]"]