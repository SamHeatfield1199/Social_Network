[{"C:\\Users\\asmir\\Desktop\\soc\\src\\index.js":"1","C:\\Users\\asmir\\Desktop\\soc\\src\\reportWebVitals.js":"2","C:\\Users\\asmir\\Desktop\\soc\\src\\App.js":"3","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\redux_store.js":"4","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Dialogs.jsx":"5","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\Profile.jsx":"8","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Message\\Message.jsx":"9","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"10","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPosts.jsx":"11","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"12","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\Post\\Post.jsx":"13","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPostsContainer.jsx":"14","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogsContainer.jsx":"15","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersReducer.js":"16","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\UsersContainer.jsx":"17","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\Users.jsx":"18","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\dialogsReducer.js":"19","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\profileReducer.js":"20","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileContainer.jsx":"21","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\authReducer.js":"22","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\HeaderContainer.jsx":"23","C:\\Users\\asmir\\Desktop\\soc\\src\\api\\api.js":"24","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Login\\Login.jsx":"25","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\AuthRedirect.js":"26","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"27","C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\validators\\validator.js":"28","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\formsControls\\FormsControls.js":"29","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\appReducer.js":"30","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersSelectors.js":"31"},{"size":702,"mtime":1612014382036,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1630,"mtime":1615636492419,"results":"35","hashOfConfig":"33"},{"size":1023,"mtime":1615548380503,"results":"36","hashOfConfig":"33"},{"size":2073,"mtime":1615512529116,"results":"37","hashOfConfig":"33"},{"size":1009,"mtime":1615283811973,"results":"38","hashOfConfig":"33"},{"size":674,"mtime":1615526578873,"results":"39","hashOfConfig":"33"},{"size":403,"mtime":1615447351673,"results":"40","hashOfConfig":"33"},{"size":218,"mtime":1615283803328,"results":"41","hashOfConfig":"33"},{"size":385,"mtime":1610693516359,"results":"42","hashOfConfig":"33"},{"size":1494,"mtime":1615509308730,"results":"43","hashOfConfig":"33"},{"size":732,"mtime":1615452275832,"results":"44","hashOfConfig":"33"},{"size":342,"mtime":1615283811973,"results":"45","hashOfConfig":"33"},{"size":569,"mtime":1615467346904,"results":"46","hashOfConfig":"33"},{"size":1083,"mtime":1615462153518,"results":"47","hashOfConfig":"33"},{"size":4267,"mtime":1615802053114,"results":"48","hashOfConfig":"33"},{"size":2262,"mtime":1615810307798,"results":"49","hashOfConfig":"33"},{"size":2061,"mtime":1615282866263,"results":"50","hashOfConfig":"33"},{"size":961,"mtime":1615461990428,"results":"51","hashOfConfig":"33"},{"size":1960,"mtime":1615467553040,"results":"52","hashOfConfig":"33"},{"size":1663,"mtime":1615548668355,"results":"53","hashOfConfig":"33"},{"size":1733,"mtime":1615544739434,"results":"54","hashOfConfig":"33"},{"size":455,"mtime":1615543516747,"results":"55","hashOfConfig":"33"},{"size":1310,"mtime":1615543875994,"results":"56","hashOfConfig":"33"},{"size":2001,"mtime":1615535676286,"results":"57","hashOfConfig":"33"},{"size":1358,"mtime":1615527549137,"results":"58","hashOfConfig":"33"},{"size":2096,"mtime":1615457072435,"results":"59","hashOfConfig":"33"},{"size":524,"mtime":1615508945387,"results":"60","hashOfConfig":"33"},{"size":945,"mtime":1615523665232,"results":"61","hashOfConfig":"33"},{"size":892,"mtime":1615548380503,"results":"62","hashOfConfig":"33"},{"size":1367,"mtime":1615810466753,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"a9mvj2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asmir\\Desktop\\soc\\src\\index.js",[],["138","139"],"C:\\Users\\asmir\\Desktop\\soc\\src\\reportWebVitals.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\App.js",["140"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport \"./App.css\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport preloader from './images/2.gif';\nimport { initializeAppTC } from \"./redux/appReducer\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if(!this.props.initialized){return <div><img src={preloader} /></div>}\n    \n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n\n          <Route path=\"/profile/:userid?\" render={() => <ProfileContainer />} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n//когда мы коннектим компоненту у нас сбивается роут\n//Поэтому оберенм его еще withRouter\n\nconst mapStateToProps = (state) => ({\n initialized: state.app.initialized\n})\n\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp: initializeAppTC}))\n  (App)\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\redux_store.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Dialogs.jsx",["141"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator';\r\nimport { Textarea } from '../common/formsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\n//презентационные компоненты получают только данные и коллбеки(вызовы функций)\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage\r\n\r\n    //Получаем JSX компоненты\r\n    let dialogsElements = state.dialogs.map(d =>\r\n        <DialogItem id={d.id} name={d.name} />)\r\n    let messagesElements = state.messages.map(m =>\r\n        <Message message={m.message} />)\r\n    let newMessageText = state.newMessageBody\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    //Отрисовываем компоненты\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                    validate ={[requiredField, maxLength ]} />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Navbar\\Navbar.jsx",["142","143","144"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}> Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}> Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> News</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> Music</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\Header.jsx",["145"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://turbologo.ru/blog/wp-content/uploads/2020/02/clan-logo-cover-958x575.png' />\r\n            <div className = {classes.loginBlock}>\r\n                {props.isAuth ? props.login\r\n                :<NavLink to = {'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPosts.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["146","147"],"import React from 'react';\r\nimport preloader from '../../../images/2.gif';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (!props.profile) {\r\n    return (\r\n      <div><img src={preloader} /></div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      {/*<div><img src=\"https://pix10.agoda.net/hotelImages/3375/-1/f73547b49eadee36c6346f52a5b4f4fe.jpg?s=1024x768\" />\r\n      </div> */}\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatus status ={props.status}\r\n        updateUserStatus = {props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\Post\\Post.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPostsContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersReducer.js",["148","149"],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\UsersContainer.jsx",["150"],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\Users.jsx",["151","152","153"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { followUser, unfollowUser } from '../../api/api'\r\nimport classes from './Users.module.css'\r\n//просто отрисовка\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                //<span className = {this.props.currentPage === p && styles.selectedPage}\r\n                return <span onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div className={classes.image}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            < img src={u.photos.small != null ? u.photos.small :\r\n                                \"https://www.pngfind.com/pngs/m/292-2924858_user-icon-business-man-flat-png-transparent-png.png\"}\r\n                            />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }\r\n                            }>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={\r\n                                () => {\r\n                                    props.follow(u.id)\r\n                                }\r\n                            }>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n            </div>)\r\n        }</div>\r\n}\r\nexport default Users","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\dialogsReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\profileReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileContainer.jsx",["154"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getUserProfileTC, setUserProfileAC, setUserStatusAC, setUserStatusTC, updateUserStatusTC } from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\n\r\n//делаем классовым, чтобы можно было сделать запрос\r\n//делаем компоненту вручную\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userid = this.props.match.params.userid\r\n    if (!userid) {\r\n      userid = this.props.authedUserid\r\n    }\r\n    this.props.getUserProfile(userid)\r\n    this.props.getUserStatus(userid)\r\n   \r\n  }\r\n\r\n  render() {\r\n    //редирект на страницу логина. если не хотим показывать контент незарегестрированным пользователям, хорошее решение\r\n    return (\r\n        <Profile {...this.props}\r\n         profile={this.props.profile} \r\n         status ={this.props.status}\r\n         updateUserStatus = {this.props.updateUserStatus}/>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authedUserid : state.auth.userid,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile: setUserProfileAC,\r\n    getUserProfile: getUserProfileTC,\r\n    getUserStatus: setUserStatusTC,\r\n    updateUserStatus: updateUserStatusTC,\r\n  }),\r\n  withRouter,\r\n  \r\n)(ProfileContainer)","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\authReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\HeaderContainer.jsx",["155"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer';\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout: logout})(HeaderContainer);","C:\\Users\\asmir\\Desktop\\soc\\src\\api\\api.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Login\\Login.jsx",["156"],"import classes from \"./../common/formsControls/FormsController.module.css\";\r\nimport { React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { login, logout } from \"../../redux/authReducer\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validator\";\r\nimport { Input } from \"../common/formsControls/FormsControls\";\r\n\r\n\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Email'}\r\n                name={'email'}\r\n                component={Input}\r\n                validate={[requiredField]}\r\n            />\r\n        </div>\r\n        <div>\r\n            <Field placeholder={'Password'}\r\n                name={'password'}\r\n                type={\"password\"}\r\n                component={Input}\r\n                validate={[requiredField]} />\r\n        </div>\r\n        <div>\r\n            <Field component={Input}\r\n                name={'rememberMe'}\r\n                type={\"checkbox\"} />  remember me\r\n            </div>\r\n        {props.error && <div className={classes.formSummaryError}>\r\n            {props.error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n\r\n    </form>\r\n}\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return (\r\n            <Redirect to={\"/profile\"} />\r\n        )\r\n    }\r\n\r\n    return <div>\r\n        <h1>\r\n            Login\r\n        </h1>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}\r\n)\r\n\r\nexport default connect(mapStateToProps, {\r\n    login: login,\r\n    logout: logout\r\n})(Login)","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\AuthRedirect.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\validators\\validator.js",["157","158"],"//Обязательное поле\r\nexport const requiredField = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Filed is required\";\r\n};\r\n\r\n//creator валидатора. Передаем параметр и он возвращает валидатор. \r\n//Каждый раз возвращает новую функцию\r\nexport const maxLengthCreator = ( maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length  is ${maxLength} symbols`;\r\n    return undefined; \r\n  };\r\n\r\n\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\formsControls\\FormsControls.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\appReducer.js",["159","160"],"import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserDataTC } from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccesActionCreator = () => {\r\n  return {\r\n    type: SET_INITIALIZED,\r\n  };\r\n};\r\n\r\nexport const initializeAppTC = () => (dispatch) => {\r\n  //когда получим данные из auth проинициализируемся\r\n  let promise = dispatch(getAuthUserDataTC())\r\n  Promise.all([promise])\r\n  .then(() =>{\r\n    dispatch(initializedSuccesActionCreator())\r\n  })\r\n  \r\n};\r\nexport default appReducer;\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersSelectors.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":21,"column":45,"nodeType":"167","endLine":21,"endColumn":68},{"ruleId":"168","severity":1,"message":"169","line":19,"column":9,"nodeType":"170","messageId":"171","endLine":19,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":18,"column":17,"nodeType":"167","endLine":18,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":21,"column":17,"nodeType":"167","endLine":21,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":24,"column":17,"nodeType":"167","endLine":24,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":8,"column":13,"nodeType":"167","endLine":8,"endColumn":107},{"ruleId":"165","severity":1,"message":"166","line":11,"column":12,"nodeType":"167","endLine":11,"endColumn":35},{"ruleId":"165","severity":1,"message":"166","line":19,"column":9,"nodeType":"167","endLine":19,"endColumn":49},{"ruleId":"168","severity":1,"message":"174","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"175","line":1,"column":22,"nodeType":"170","messageId":"171","endLine":1,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":34,"column":32,"nodeType":"167","endLine":34,"endColumn":55},{"ruleId":"168","severity":1,"message":"174","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":20},{"ruleId":"168","severity":1,"message":"176","line":3,"column":22,"nodeType":"170","messageId":"171","endLine":3,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":26,"column":29,"nodeType":"167","endLine":28,"endColumn":31},{"ruleId":"168","severity":1,"message":"177","line":5,"column":46,"nodeType":"170","messageId":"171","endLine":5,"endColumn":61},{"ruleId":"168","severity":1,"message":"178","line":3,"column":37,"nodeType":"170","messageId":"171","endLine":3,"endColumn":57},{"ruleId":"168","severity":1,"message":"179","line":12,"column":7,"nodeType":"170","messageId":"171","endLine":12,"endColumn":16},{"ruleId":"168","severity":1,"message":"180","line":2,"column":7,"nodeType":"170","messageId":"171","endLine":2,"endColumn":20},{"ruleId":"168","severity":1,"message":"181","line":7,"column":7,"nodeType":"170","messageId":"171","endLine":7,"endColumn":18},{"ruleId":"168","severity":1,"message":"182","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"183","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":17},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'newMessageText' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'followUser' is defined but never used.","'getUsers' is defined but never used.","'unfollowUser' is defined but never used.","'setUserStatusAC' is defined but never used.","'setUserActionCreator' is defined but never used.","'maxLength' is assigned a value but never used.","'requiredField' is assigned a value but never used.","'maxLength30' is assigned a value but never used.","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]