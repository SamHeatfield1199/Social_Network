[{"C:\\Users\\asmir\\Desktop\\soc\\src\\index.js":"1","C:\\Users\\asmir\\Desktop\\soc\\src\\reportWebVitals.js":"2","C:\\Users\\asmir\\Desktop\\soc\\src\\App.js":"3","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\redux_store.js":"4","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Navbar\\Navbar.jsx":"5","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\Header.jsx":"6","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\Profile.jsx":"7","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPosts.jsx":"8","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"9","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\Post\\Post.jsx":"10","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPostsContainer.jsx":"11","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersReducer.js":"12","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\dialogsReducer.js":"13","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\profileReducer.js":"14","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileContainer.jsx":"15","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\authReducer.js":"16","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\HeaderContainer.jsx":"17","C:\\Users\\asmir\\Desktop\\soc\\src\\api\\api.js":"18","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Login\\Login.jsx":"19","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\AuthRedirect.js":"20","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"21","C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\validators\\validator.js":"22","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\formsControls\\FormsControls.js":"23","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\appReducer.js":"24","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersSelectors.js":"25","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"26","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogsContainer.jsx":"27","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Dialogs.jsx":"28","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\UsersContainer.jsx":"29","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\Users.jsx":"30","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Message\\Message.jsx":"31","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"32","C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\objectelpers.js":"33","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\Paginator\\Paginator.jsx":"34","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\User.jsx":"35","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileForm.jsx":"36","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\withSuspense.jsx":"37"},{"size":251,"mtime":1616930238703,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":5319,"mtime":1616943715677,"results":"41","hashOfConfig":"39"},{"size":1235,"mtime":1616485519670,"results":"42","hashOfConfig":"39"},{"size":1009,"mtime":1615283811973,"results":"43","hashOfConfig":"39"},{"size":674,"mtime":1615526578873,"results":"44","hashOfConfig":"39"},{"size":514,"mtime":1616760002818,"results":"45","hashOfConfig":"39"},{"size":1568,"mtime":1616766182540,"results":"46","hashOfConfig":"39"},{"size":2381,"mtime":1616936340510,"results":"47","hashOfConfig":"39"},{"size":342,"mtime":1615283811973,"results":"48","hashOfConfig":"39"},{"size":569,"mtime":1615467346904,"results":"49","hashOfConfig":"39"},{"size":4221,"mtime":1616399111579,"results":"50","hashOfConfig":"39"},{"size":961,"mtime":1615461990428,"results":"51","hashOfConfig":"39"},{"size":3025,"mtime":1616766870692,"results":"52","hashOfConfig":"39"},{"size":2045,"mtime":1616931898285,"results":"53","hashOfConfig":"39"},{"size":1846,"mtime":1616765201253,"results":"54","hashOfConfig":"39"},{"size":455,"mtime":1615543516747,"results":"55","hashOfConfig":"39"},{"size":1694,"mtime":1616930238719,"results":"56","hashOfConfig":"39"},{"size":1756,"mtime":1616474500881,"results":"57","hashOfConfig":"39"},{"size":1358,"mtime":1615527549137,"results":"58","hashOfConfig":"39"},{"size":2096,"mtime":1616580088581,"results":"59","hashOfConfig":"39"},{"size":524,"mtime":1615508945387,"results":"60","hashOfConfig":"39"},{"size":1224,"mtime":1616474775046,"results":"61","hashOfConfig":"39"},{"size":920,"mtime":1616941223505,"results":"62","hashOfConfig":"39"},{"size":1336,"mtime":1616482813139,"results":"63","hashOfConfig":"39"},{"size":3270,"mtime":1616591322610,"results":"64","hashOfConfig":"39"},{"size":1083,"mtime":1616293629734,"results":"65","hashOfConfig":"39"},{"size":2073,"mtime":1616293627387,"results":"66","hashOfConfig":"39"},{"size":2255,"mtime":1616939643544,"results":"67","hashOfConfig":"39"},{"size":779,"mtime":1616938976621,"results":"68","hashOfConfig":"39"},{"size":218,"mtime":1616293640767,"results":"69","hashOfConfig":"39"},{"size":385,"mtime":1616293635299,"results":"70","hashOfConfig":"39"},{"size":231,"mtime":1616396866636,"results":"71","hashOfConfig":"39"},{"size":1755,"mtime":1616939639322,"results":"72","hashOfConfig":"39"},{"size":1351,"mtime":1616480896126,"results":"73","hashOfConfig":"39"},{"size":1329,"mtime":1616765861439,"results":"74","hashOfConfig":"39"},{"size":304,"mtime":1616943715677,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"a9mvj2",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"78"},"C:\\Users\\asmir\\Desktop\\soc\\src\\index.js",[],["167","168"],"C:\\Users\\asmir\\Desktop\\soc\\src\\reportWebVitals.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\App.js",["169"],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\redux_store.js",[],["170","171"],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Navbar\\Navbar.jsx",["172","173","174"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}> Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}> Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> News</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> Music</a>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <a> Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\Header.jsx",["175"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://turbologo.ru/blog/wp-content/uploads/2020/02/clan-logo-cover-958x575.png' />\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} -\r\n                <button onClick = {props.logout}>Log out</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPosts.jsx",["176"],"import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/formsControls/FormsControls';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\n//разделяем на презентационные и контейнерные компоненты\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements =\r\n    [...props.postData].reverse().map(p => <Post key = {p.id} message={p.message}\r\n      likesCount={p.likesCount} />)\r\n  //создаем ссылку на элемент\r\n  // let newPostElement = React.createRef();\r\nlet newPostElement = React.createRef()\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n  return (\r\n    <div className={classes.postBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n          name=\"newPostText\"\r\n          placeholder=\"Enter your post\"\r\n          validate={[requiredField, maxLength]} />\r\n      </div>\r\n      <div>\r\n        <button >Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default MyPosts;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["177","178"],"import React, { useState } from 'react';\r\nimport preloader from '../../../images/2.gif';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataFormReduxForm from './ProfileForm';\r\n\r\nconst ProfileInfo = (profile, saveProfile, ...props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n  if (!profile) {\r\n    return (\r\n      <div><img src={preloader} /></div>\r\n    )\r\n  }\r\n\r\n  const omMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files(0))\r\n    }\r\n  }\r\n\r\n  const onSubmit =  (formData) => {\r\n     saveProfile(formData).then(() =>{\r\n       setEditMode(false)\r\n     })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={profile.photos.large\r\n          || \"https://www.pngfind.com/pngs/m/292-2924858_user-icon-business-man-flat-png-transparent-png.png\"\r\n        } className={classes.mainphoto} />\r\n        {props.isOwner && <input type={'file'} onChange={omMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData profile={profile}\r\n            isOwner={props.isOwner}\r\n            toEditMode={() => { setEditMode(true) }} />}\r\n\r\n        <ProfileStatusWithHooks status={props.status}\r\n          updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n  return <div>\r\n    {isOwner && <div>\r\n      <button onClick={toEditMode}>Edit</button>\r\n    </div>}\r\n    <div>\r\n      <b> Full Name </b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b> Looking for a job </b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b> My skills </b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n\r\n    <div>\r\n      <b> About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b> Contacts</b>:  {Object.keys(profile.contacts).map(key => {\r\n        return <Contacts key={key} contatTitle={key} contactValue={profile.contacts(key)} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\nconst Contacts = ({ contatTitle, contactValue }) => {\r\n  return <div>\r\n    <b>{contatTitle}</b>: {contactValue}\r\n  </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\Post\\Post.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\My Posts\\MyPostsContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersReducer.js",["179","180","181"],"import { act } from \"react-dom/test-utils\";\r\nimport { followUser, getUsers, userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objectelpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SETUSERS = \"SET_USERS\";\r\nconst SETCURRENTPAGE = \"SET_CURRENT_PAGE\";\r\nconst SETTOTALUSERSCOUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n\r\n    case SETUSERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n\r\n    case SETCURRENTPAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n\r\n    case SETTOTALUSERSCOUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followActionCreator = (userId) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId,\r\n  };\r\n};\r\nexport const unfollowActionCreator = (userId) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const setUsersActionCreator = (users) => {\r\n  return {\r\n    type: SETUSERS,\r\n    users,\r\n  };\r\n};\r\n\r\nexport const setCurrentPageActionCreator = (currentPage) => {\r\n  return {\r\n    type: SETCURRENTPAGE,\r\n    currentPage,\r\n  };\r\n};\r\nexport const setTotalUsersCountActionCreator = (totalUsersCount) => {\r\n  return {\r\n    type: SETTOTALUSERSCOUNT,\r\n    count: totalUsersCount,\r\n  };\r\n};\r\nexport const toggleIsfetchingActionCreator = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\n\r\nexport const followingInProgressActionCreator = (isFetching, userId) => {\r\n  return {\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n  };\r\n};\r\n\r\n//thunk - функция, которая выполняет асинхронную работу и диспатчит экшены, чтобы ui не создаввал запросы к dal\r\n//и все происходило в бизнес логике\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsfetchingActionCreator(true));\r\n    dispatch(setCurrentPageActionCreator(currentPage));\r\n    let data = await userAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsfetchingActionCreator(false));\r\n    dispatch(setUsersActionCreator(data.items));\r\n    dispatch(setTotalUsersCountActionCreator(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n  dispatch(followingInProgressActionCreator(true, id));\r\n  let data = await apiMethod(id);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(id));\r\n  }\r\n  dispatch(followingInProgressActionCreator(false, id));\r\n};\r\n\r\nexport const followThunkCreator = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      userAPI.followUser.bind(userAPI),\r\n      followActionCreator\r\n    );\r\n  };\r\n};\r\n\r\nexport const unfollowThunkCreator = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      userAPI.unfollowUser.bind(userAPI),\r\n      unfollowActionCreator\r\n    );\r\n  };\r\n};\r\n\r\nexport default userReducer;\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\dialogsReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\profileReducer.js",["182"],"import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\n\r\n\r\nlet initialState = {\r\n  postData: [\r\n    { id: 1, message: \"Hi, how are you?\", likesCount: \"1\" },\r\n    { id: 2, message: \"HIt`s my first post\", likesCount: \"23\" },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 6,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        postData: [...state.postData, newPost],\r\n        newPostText: \"\",\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        postData: state.postData.filter(p=> p.id !=action.postId)\r\n    }\r\n  }\r\n  case SAVE_PHOTO_SUCCESS: {\r\n    return {\r\n      ...state,\r\n      profile: {...state.profile, photos: action.photos}\r\n  }\r\n}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n  return {\r\n    type: ADD_POST,\r\n    newPostText,\r\n  };\r\n};\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n  };\r\n};\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\nexport const deletePost = (postId) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    postId,\r\n  };\r\n};\r\nexport const savePhotoSuccess = (photos) => {\r\n  return {\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos,\r\n  };\r\n};\r\n\r\n\r\nexport const getStatus = (userid) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userid);\r\n  dispatch(setStatus(data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let data = await profileAPI.updateStatus(status);\r\n  if (data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\nexport const getUserProfile = (userid) => async (dispatch) => {\r\n  let data = await profileAPI.getUserProfile(userid);\r\n  dispatch(setUserProfile(data));\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let data = await profileAPI.savePhoto(file);\r\n  if (data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(data.data.photos));\r\n  }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userid = getState().auth.userid \r\n  let data = await profileAPI.saveProfile(profile);\r\n  if (data.resultCode === 0) {\r\n    dispatch(getUserProfile(userid));\r\n  }else{\r\n    dispatch(stopSubmit(\"edit-profile\", { _error: data.messages[0]}))\r\n    return Promise.reject(data.messages[0])\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileContainer.jsx",["183"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUserProfile, setUserProfile, savePhoto,\r\n  saveProfile, getStatus, updateStatus\r\n} from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\n\r\n//делаем классовым, чтобы можно было сделать запрос\r\n//делаем компоненту вручную\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userid = this.props.match.params.userid\r\n    if (!userid) {\r\n      userid = this.props.authedUserid\r\n      if (!userid) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userid)\r\n    this.props.getUserStatus(userid)\r\n\r\n  }\r\n  componentDidMount(){\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    if(this.props.match.params.userid != prevProps.match.params.userid){\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //редирект на страницу логина. если не хотим показывать контент незарегестрированным пользователям, хорошее решение\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userid}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authedUserid: state.auth.userid,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n   setUserProfile,\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n  withRouter,\r\n\r\n)(ProfileContainer)","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\authReducer.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\api\\api.js",["184"],"import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"cbf4e5e8-7f5d-4438-82d1-9a4b0eaf09da\",\r\n  },\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize =10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n\r\n  unfollowUser(id) {\r\n    return instance.delete(`follow/${id}`).then((response) => response.data);\r\n  },\r\n  followUser(id) {\r\n    return instance.post(`follow/${id}`).then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  authMe() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe})\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n}\r\n}\r\n\r\nexport const profileAPI = {\r\n  getUserProfile(userid) {\r\n    return instance.get(`profile/` + userid).then((response) => response.data);\r\n  },\r\n  getStatus(userid) {\r\n    return instance.get(`profile/status/` + userid).then((response) => response.data);\r\n  },\r\n  updateStatus(status){\r\n    return instance.put(`profile/status`, {status: status}).then((response) => response.data);\r\n  },\r\n\r\n  savePhoto(photoFile){\r\n    const formData = new FormData()\r\n    formData.append('image', photoFile)\r\n    return instance.put(`profile/photo`, formData, {headers:{\r\n      \"Content-Type\": 'multipart/form-data'\r\n    }}).then((response) => response.data);\r\n  },\r\n  \r\n  savePhoto(profile){\r\n    return instance.put(`profile`,profile).then((response) => response.data);\r\n  }\r\n\r\n};\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Login\\Login.jsx",["185","186"],"import classes from \"./../common/formsControls/FormsController.module.css\";\r\nimport { React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { login, logout } from \"../../redux/authReducer\";\r\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validator\";\r\nimport { CreateField, Input } from \"../common/formsControls/FormsControls\";\r\n//деструктуризировали парметры(достали только то, что нужно из пропсов)\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {CreateField(\"Email\", \"email\", [requiredField], Input)}\r\n        {CreateField('Password', 'password', [requiredField], Input, { type: \"password\" })}\r\n        {CreateField(\"\", 'rememberMe', [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n        {error && <div className={classes.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return (\r\n            <Redirect to={\"/profile\"} />\r\n        )\r\n    }\r\n\r\n    return <div>\r\n        <h1>\r\n            Login\r\n        </h1>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}\r\n)\r\n\r\nexport default connect(mapStateToProps, {\r\n    login: login,\r\n    logout: logout\r\n})(Login)","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\AuthRedirect.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\validators\\validator.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\formsControls\\FormsControls.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\appReducer.js",["187","188","189"],"import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSucces = () => {\r\n  return {\r\n    type: INITIALIZED_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  //когда получим данные из auth проинициализируемся\r\n  let promise = dispatch(getAuthUserData())\r\n  Promise.all([promise])\r\n  .then(() =>{\r\n    dispatch(initializedSucces())\r\n  })\r\n  \r\n};\r\nexport default appReducer;\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\redux\\usersSelectors.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Dialogs.jsx",["190"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator';\r\nimport { Textarea } from '../common/formsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\n//презентационные компоненты получают только данные и коллбеки(вызовы функций)\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage\r\n\r\n    //Получаем JSX компоненты\r\n    let dialogsElements = state.dialogs.map(d =>\r\n        <DialogItem id={d.id} name={d.name} />)\r\n    let messagesElements = state.messages.map(m =>\r\n        <Message message={m.message} />)\r\n    let newMessageText = state.newMessageBody\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    //Отрисовываем компоненты\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                    validate ={[requiredField, maxLength ]} />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\UsersContainer.jsx",["191"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport preloader from '../../images/2.gif';\r\nimport {\r\n  followingInProgressActionCreator,\r\n  followThunkCreator,\r\n  getUsersThunkCreator,\r\n  setCurrentPageActionCreator,\r\n  unfollowThunkCreator\r\n} from '../../redux/usersReducer';\r\nimport {getUser, \r\n  getPageSize, \r\n  getTotalUsersCount, \r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress,} from '../../redux/usersSelectors'\r\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\r\nimport Users from './Users';\r\n\r\n//контейерная компонета занимается побочными эффектами функции\r\nclass UsersContainer extends React.Component {\r\n  //ajax является побочым эффектом, что не подходит чистой функции\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props\r\n    this.props.getUsers(currentPage, pageSize)\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize)\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <img src={preloader} /> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followInProgress={this.props.followInProgress}\r\n        followingInProgress={this.props.followingInProgress} />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUser(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow: followThunkCreator,\r\n    setCurrentPage: setCurrentPageActionCreator,\r\n    followInProgress: followingInProgressActionCreator,\r\n    getUsers: getUsersThunkCreator,\r\n    unfollow: unfollowThunkCreator,\r\n\r\n  }),\r\n  withAuthRedirect\r\n)(UsersContainer)\r\n\r\n\r\n","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\Users.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\utils\\objectelpers.js",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\common\\Paginator\\Paginator.jsx",[],"C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Users\\User.jsx",["192"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './Users.module.css'\r\n//просто отрисовка\r\nlet User = (\r\n    { user, followingInProgress, unfollow, follow }\r\n    ) => {\r\n        return <div>\r\n        <span>\r\n            <div className={classes.image}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    < img src={user.photos.small != null ? user.photos.small :\r\n                        \"https://www.pngfind.com/pngs/m/292-2924858_user-icon-business-man-flat-png-transparent-png.png\"}\r\n                    />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }\r\n                    }>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)} onClick={\r\n                        () => {\r\n                            follow(user.id)\r\n                        }\r\n                    }>Follow</button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n        </span>\r\n    </div>\r\n    }\r\n    export default User","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\Profile\\ProfileInfo\\ProfileForm.jsx",["193"],"import React, { useState } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { CreateField, Input, Textarea } from '../../common/formsControls/FormsControls';\r\n\r\nconst ProileDataForm = ({handleSubmit, profile, error}) => {\r\n  return <form onSubmit = {handleSubmit}>\r\n    <div><button >Save</button></div>\r\n    {error && <div className={classes.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n    <div>\r\n      <b> Full Name </b>: {CreateField(\"Full Name\", \"fullName\", [], Input)}\r\n    </div>\r\n    <div>\r\n      <b> Looking for a job </b>:\r\n      {CreateField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n    </div>\r\n\r\n      <div>\r\n        <b> My skills </b>:  {CreateField(\"My skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n      </div>\r\n  \r\n\r\n    <div>\r\n      <b> About me</b>: {CreateField(\"About me\", \"aboutMe\", [], Textarea)}\r\n    </div>\r\n  <div>\r\n      <b> Contacts</b>:  {Object.keys(profile.contacts).map(key => {\r\n        return <div className = {classes.contacts}>\r\n          <b>{key}: {CreateField(key, \"contacts.\"+key, [], Textarea)}</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  \r\n  </form>\r\n}\r\n\r\nlet ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","C:\\Users\\asmir\\Desktop\\soc\\src\\components\\hoc\\withSuspense.jsx",["194","195"],"\r\nimport React, { Component } from \"react\";\r\nimport preloader from '../../images/2.gif';\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\n    return (props) =>{\r\n        return <React.Suspense fallback ={<img src={preloader} />}>\r\n             <Component {...props}/>\r\n        </React.Suspense>\r\n       \r\n    }\r\n}",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":54,"column":11,"nodeType":"202","endLine":54,"endColumn":34},{"ruleId":"196","replacedBy":"203"},{"ruleId":"198","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":18,"column":17,"nodeType":"202","endLine":18,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":21,"column":17,"nodeType":"202","endLine":21,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":24,"column":17,"nodeType":"202","endLine":24,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":8,"column":13,"nodeType":"202","endLine":8,"endColumn":107},{"ruleId":"207","severity":1,"message":"208","line":17,"column":5,"nodeType":"209","messageId":"210","endLine":17,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":14,"column":12,"nodeType":"202","endLine":14,"endColumn":35},{"ruleId":"200","severity":1,"message":"201","line":33,"column":9,"nodeType":"202","endLine":35,"endColumn":43},{"ruleId":"207","severity":1,"message":"211","line":1,"column":10,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"212","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":20},{"ruleId":"207","severity":1,"message":"213","line":2,"column":22,"nodeType":"209","messageId":"210","endLine":2,"endColumn":30},{"ruleId":"214","severity":1,"message":"215","line":50,"column":50,"nodeType":"216","messageId":"217","endLine":50,"endColumn":52},{"ruleId":"214","severity":1,"message":"215","line":31,"column":39,"nodeType":"216","messageId":"217","endLine":31,"endColumn":41},{"ruleId":"218","severity":1,"message":"219","line":59,"column":3,"nodeType":"220","messageId":"217","endLine":59,"endColumn":12},{"ruleId":"207","severity":1,"message":"221","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":15},{"ruleId":"207","severity":1,"message":"222","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":26},{"ruleId":"207","severity":1,"message":"223","line":1,"column":10,"nodeType":"209","messageId":"210","endLine":1,"endColumn":20},{"ruleId":"207","severity":1,"message":"224","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":17},{"ruleId":"207","severity":1,"message":"225","line":5,"column":7,"nodeType":"209","messageId":"210","endLine":5,"endColumn":22},{"ruleId":"207","severity":1,"message":"226","line":19,"column":9,"nodeType":"209","messageId":"210","endLine":19,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":35,"column":32,"nodeType":"202","endLine":35,"endColumn":55},{"ruleId":"200","severity":1,"message":"201","line":12,"column":21,"nodeType":"202","endLine":14,"endColumn":23},{"ruleId":"207","severity":1,"message":"227","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"228","line":2,"column":17,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":8,"column":43,"nodeType":"202","endLine":8,"endColumn":66},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["229"],["230"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'newPostElement' is assigned a value but never used.","Identifier","unusedVar","'act' is defined but never used.","'followUser' is defined but never used.","'getUsers' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'savePhoto'.","ObjectExpression","'Field' is defined but never used.","'maxLengthCreator' is defined but never used.","'stopSubmit' is defined but never used.","'authAPI' is defined but never used.","'SET_INITIALIZED' is assigned a value but never used.","'newMessageText' is assigned a value but never used.","'useState' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]